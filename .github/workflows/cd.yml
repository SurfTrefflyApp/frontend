name: Frontend CD

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_PASSPHRASE }}" | ssh-add ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts  

      - name: Download docker-compose.yml
        run: |
          curl -H "Accept: application/vnd.github.v3.raw" \
          -o docker-compose.yml \
          https://api.github.com/repos/TrefflyTeam/backend/contents/docker-compose.yml?ref=develop

      - name: Copy docker-compose.yml to server
        run: |
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_PASSPHRASE }}" | ssh-add ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no ./docker-compose.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.APP_PATH }}/docker-compose.yml

      - name: Debug docker-compose.yml
        run: cat docker-compose.yml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker image for frontend
        run: |
          docker build -t g0dd0r0/treffly-client:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push g0dd0r0/treffly-client:latest

      - name: Deploy frontend to server
        run: |
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_PASSPHRASE }}" | ssh-add ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'ENDSSH'
          cd ${{ secrets.APP_PATH }} &&
          docker compose pull frontend &&
          docker compose up -d frontend
          docker system prune -f
          ENDSSH